name: Cleanup Old Docker Images

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  cleanup:
    name: Clean Up Docker Images
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: List all image tags
      - name: List All Image Tags
        id: list_tags
        run: |
          TOKEN=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} "https://hub.docker.com/v2/users/login/" | jq -r .token)
          curl -s -H "Authorization: JWT $TOKEN" \
          "https://hub.docker.com/v2/repositories/billzhaohongwei/caa900debtsolverproject-auth-service/tags/?page_size=100" \
          | jq -r '.results | sort_by(.last_updated) | .[].name' > tags.txt

      # Step 3: Determine tags to delete (retain the latest 3)
      - name: Find Tags to Delete
        id: find_tags
        run: |
          TOTAL_TAGS=$(wc -l < tags.txt)
          if [ "$TOTAL_TAGS" -gt 3 ]; then
            TAGS_TO_DELETE=$(head -n -3 tags.txt)
            echo "TAGS_TO_DELETE=$TAGS_TO_DELETE" >> $GITHUB_ENV
          else
            echo "No tags to delete." >> $GITHUB_ENV
          fi

      # Step 4: Delete older tags
      - name: Delete Old Tags
        if: env.TAGS_TO_DELETE != ''
        run: |
          TOKEN=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} "https://hub.docker.com/v2/users/login/" | jq -r .token)
          for TAG in $TAGS_TO_DELETE; do
            echo "Deleting tag: $TAG"
            curl -s -X DELETE -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/billzhaohongwei/caa900debtsolverproject-auth-service/tags/$TAG/"
          done
